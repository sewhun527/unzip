<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<flow name="fileunzipmoduleFlow">
		
		<file:inbound-endpoint path="${inputPath}" responseTimeout="10000" doc:name="File" >
			<file:filename-regex-filter pattern="(.*).zip" caseSensitive="false"/>

		</file:inbound-endpoint>
		<logger message="#[payload]" level="INFO" doc:name="Logger"/>
		<set-variable variableName="getfilename" value="#[message.inboundProperties.originalFilename]" doc:name="Variable"/>		
		<set-payload value="#[new fileunzipmodule.Decompress('${inputPath}'+flowVars.getfilename ,'${bkpPath}'+flowVars.getfilename , '${destPath}',1)]" doc:name="Set Payload"/>
	</flow>
</mule>


===================================

mule-app-properties

inputPath=C:/unzip/input/
destPath=C:/unzip/output/
bkpPath=C:/unzip/backup/


=============================
java


package fileunzipmodule;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

import com.google.common.io.Files;

public class Decompress {
	 public Decompress(String zipFilePath,String bkpPath, String destDir, int id) {
	        File dir = new File(destDir);
	        // create output directory if it doesn't exist
	        if(!dir.exists()) dir.mkdirs();
	        FileInputStream fis;
	        //buffer for read and write data to file
	        byte[] buffer = new byte[1024];
	        try {
	            fis = new FileInputStream(zipFilePath);
	            ZipInputStream zis = new ZipInputStream(fis);
	            ZipEntry ze = zis.getNextEntry();
	            while(ze != null){
	            	//complete filename with ext
	                String fileName = ze.getName();
	                //file extension
	                String ext = fileName.substring(fileName.lastIndexOf("."));
	                //filename
	                String file = fileName.substring(0, fileName.lastIndexOf("."));
	                
	                File newFile = new File(destDir + File.separator + file + id + ext);
	                System.out.println("Unzipping to "+newFile.getAbsolutePath());
	                //create directories for sub directories in zip
	                new File(newFile.getParent()).mkdirs();
	                FileOutputStream fos = new FileOutputStream(newFile);
	                int len;
	                while ((len = zis.read(buffer)) > 0) {
	                fos.write(buffer, 0, len);
	                }
	                fos.close();
	                //close this ZipEntry
	                zis.closeEntry();
	                ze = zis.getNextEntry();
	            }
	            //close last ZipEntry
	            zis.closeEntry();
	            zis.close();
	            fis.close();
	            //Backup File
	            Files.copy(new File(zipFilePath),new File(bkpPath));
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	        
	        
	        
	    }

}



